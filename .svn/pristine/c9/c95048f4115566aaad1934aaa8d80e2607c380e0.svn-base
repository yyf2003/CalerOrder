using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using BLL;
using DAL;
using Models;
using Common;


namespace WebApp.Subjects.SupplementByRegion
{
    public partial class List : BasePage
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                BindCustomerList(ref ddlCustomer);
                BindData();
            }
        }

        void BindData()
        {
            var list = (from subject in CurrentContext.DbContext.Subject
                       join user in CurrentContext.DbContext.UserInfo
                       on subject.AddUserId equals user.UserId
                       join customer in CurrentContext.DbContext.Customer
                       on subject.CustomerId equals customer.Id
                       where subject.SubjectType == (int)SubjectTypeEnum.分区补单
                       select new {
                           subject,
                           subject.Status,
                           subject.ApproveState,
                           user.RealName,
                           customer.CustomerName
                       }).ToList();
            if (!IsPostBack)
            {
                List<string> region = list.Select(s => s.subject.SupplementRegion).Distinct().ToList();
                cblRegion.Items.Clear();
                region.ForEach(s => {
                    ListItem li = new ListItem();
                    li.Text = s + "&nbsp;&nbsp;";
                    li.Value = s;
                    cblRegion.Items.Add(li);
                });
            }
            if (CurrentUser.RoleId == 5)
            {
                list = list.Where(s => s.subject.AddUserId == CurrentUser.UserId).ToList();
            }
            if (!string.IsNullOrWhiteSpace(txtSubjectName.Text))
            {
                string subjectName = txtSubjectName.Text.Trim();
                list = list.Where(s => s.subject.SubjectName.ToLower().Contains(subjectName.ToLower())).ToList();
            }
            if (!string.IsNullOrWhiteSpace(txtSubjectNo.Text))
            {
                string subjectNo = txtSubjectNo.Text.Trim();
                list = list.Where(s => s.subject.SubjectNo.Contains(subjectNo)).ToList();
            }
            List<string> regionList = new List<string>();
            foreach (ListItem li in cblRegion.Items)
            {
                if (li.Selected)
                {
                    regionList.Add(li.Value.ToLower());
                }
            }
            if (regionList.Any())
            {
                list = list.Where(s => regionList.Contains(s.subject.SupplementRegion.ToLower())).ToList();
            }
            AspNetPager1.RecordCount = list.Count;
            this.AspNetPager1.CustomInfoHTML = string.Format("当前第{0}/{1}页 共{2}条记录 每页{3}条", new object[] { this.AspNetPager1.CurrentPageIndex, this.AspNetPager1.PageCount, this.AspNetPager1.RecordCount, this.AspNetPager1.PageSize });
            gv.DataSource = list.OrderByDescending(s => s.subject.Id).Skip((AspNetPager1.CurrentPageIndex - 1) * AspNetPager1.PageSize).Take(AspNetPager1.PageSize).ToList();
            gv.DataBind();
            SetPromission(gv, new object[] { btnAdd });

        }

        protected void btnAdd_Click(object sender, EventArgs e)
        {
            Response.Redirect("Add.aspx", false);
        }

        protected void btnSearch_Click(object sender, EventArgs e)
        {
            BindData();
        }

        protected void AspNetPager1_PageChanged(object sender, EventArgs e)
        {

        }

        protected void gv_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            int id = int.Parse(e.CommandArgument.ToString());
            if (e.CommandName == "EditItem")
            {
                Response.Redirect("Add.aspx?subjectId=" + id, false);
            }
            if (e.CommandName == "Check")
            {
                Response.Redirect("CheckDetail.aspx?subjectId=" + id, false);
            }
            if (e.CommandName == "DeleteItem")
            {
                SubjectBLL subjectBll = new SubjectBLL();
                Subject model = subjectBll.GetModel(id);
                if (model != null)
                {
                    new FinalOrderDetailTempBLL().Delete(s=>s.RegionSupplementId==id);
                    new RegionSupplementDetailBLL().Delete(s=>s.ItemId==id);
                    subjectBll.Delete(model);
                    BindData();
                }
            }
        }

        protected void gv_RowDataBound(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowIndex != -1)
            {
                object item = e.Row.DataItem;
                if (item != null)
                {
                    object statusObj = item.GetType().GetProperty("Status").GetValue(item,null);
                    object approveStateObj = item.GetType().GetProperty("ApproveState").GetValue(item, null);
                    int status = statusObj != null ? int.Parse(statusObj.ToString()) : 1;
                    int approveState = approveStateObj != null ? int.Parse(approveStateObj.ToString()) : 0;
                    Label labStatus = (Label)e.Row.FindControl("labStatus");
                    Label labApprove = (Label)e.Row.FindControl("labApprove");
                    LinkButton lbDelete = (LinkButton)e.Row.FindControl("lbDelete");
                    
                    string statusMsg = string.Empty;
                    switch (status)
                    {
                        case 1:
                            statusMsg = "<span style='color:red;'>待下单</span>";
                            break;
                        case 2:
                            statusMsg = "<span style='color:red;'>待提交</span>";
                            break;
                        case 4:
                            statusMsg = "<span style='color:green;'>提交完成</span>";
                            break;
                    }
                    labStatus.Text = statusMsg;

                    string approveMsg = string.Empty;
                    switch (approveState)
                    {
                        case 0:
                            approveMsg = "<span style='color:blue;'>待审批</span>";
                            if (status < 2)
                            {
                                approveMsg = "--";
                            }
                            lbDelete.Attributes.Add("OnClick", "return confirm('确定删除吗？')");
                            break;
                        case 1:
                            approveMsg = "<span style='color:green;'>审批通过</span>";
                            lbDelete.Enabled = false;
                            lbDelete.CommandName = "";
                            lbDelete.Style.Add("color", "#000");
                            break;
                        case 2:
                            approveMsg = "<span style='color:red;'>审批不通过</span>";
                            lbDelete.Attributes.Add("OnClick", "return confirm('确定删除吗？')");
                            break;
                        default:
                            approveMsg = "--";
                            break;
                    }
                    labApprove.Text = approveMsg;
                }
            }
        }
    }
}